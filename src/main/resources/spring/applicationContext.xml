<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
	    http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <!-- 设置扫描位置 -->
    <context:component-scan base-package="com.gqcp.**.service"/>


    <!-- 加载其他配置文件 -->
    <import resource="classpath:spring/applicationContext-*.xml"/>
    <!-- 加载properties文件 -->
    <context:property-placeholder location="classpath:config.properties"
                                  order="1"/>

    <!-- 资源文件 -->
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>messages/messages</value>
            </list>
        </property>
        <property name="useCodeAsDefaultMessage" value="true"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="cacheSeconds" value="60"/>
    </bean>

    <!-- 一个redis服务实例配置详情 -->
    <bean id="singleConfig" class="org.redisson.SingleServerConfig">
        <!-- 必填! 提供redis服务的网络地址 -->
        <property name="address" value="${redis.host}"></property>
        <!-- 非必填! redis发布/订阅模式下连接池的大小,默认最大25个 -->
        <property name="subscriptionConnectionPoolSize" value="25"></property>
        <!--非必填! redis 连接词大小,默认最大100个 -->
        <property name="connectionPoolSize" value="100"></property>
        <!-- 非必填! 默认false -->
        <property name="dnsMonitoring" value="false"></property>
        <property name="dnsMonitoringInterval" value="5000"></property>
    </bean>
    <bean id="redissonPoolConfig" class="com.gqcp.common.cache.config.RedissonPoolConfig">
        <property name="singleConfig" ref="singleConfig"></property>
        <!-- 非必填! 表示使用的线程最大数。默认0等于当前机器的处理器*2 -->
        <property name="threads" value="0"></property>
        <!-- 非必填! 编码算法 默认JsonJacksonCodec -->
        <!-- <property name="codec" value=""></property> -->
        <!-- 非必填！epoll是Linux内核为处理大批量文件描述符而作了改进的poll，是Linux下多路复用IO接口select/poll的增强版本
            默认false -->
        <property name="useLinuxNativeEpoll" value="false"></property>
        <property name="pingTimeout" value="1000"></property>
        <!-- 非必填 超时时间 默认1分钟 -->
        <property name="timeout" value="300000"></property>
        <!-- 非必填 redis down掉尝试重连的次数 默认20 -->
        <property name="retryAttempts" value="20"></property>
        <!-- 非必填 重连的时间间隔 默认1秒 -->
        <property name="retryInterval" value="1000"></property>
        <!-- 非必填 一定次数重连失败 默认关闭连接 -->
        <property name="closeConnectionAfterFailAttempts" value="10"></property>
        <!-- 非必填 默认选择0号库 -->
        <property name="database" value="${redis.database}"></property>
        <!-- 非必填 默认null -->
        <!-- <property name="password" value=""></property> -->
        <property name="subscriptionsPerConnection" value="5"></property>
        <!-- 客户端名称 -->
        <property name="clientName" value="singleServerConfig"></property>
    </bean>

    <bean id="redissonTemplate"
          class="com.gqcp.common.cache.factory.RedissonFactoryBean">
        <property name="config" ref="redissonPoolConfig"/>
    </bean>

    <bean id="threadPoolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <!-- 核心线程数，默认为1 -->
        <property name="corePoolSize" value="10"/>
        <!-- 最大线程数，默认为Integer.MAX_VALUE -->
        <property name="maxPoolSize" value="50"/>
        <!-- 队列最大长度，一般需要设置值>=notifyScheduledMainExecutor.maxNum；默认为Integer.MAX_VALUE
            <property name="queueCapacity" value="1000" /> -->
        <!-- 线程池维护线程所允许的空闲时间，默认为60s -->
        <property name="keepAliveSeconds" value="300"/>
        <!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->
        <property name="rejectedExecutionHandler">
            <!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
            <!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
            <!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
            <!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
            <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy"/>
        </property>
    </bean>

</beans>
