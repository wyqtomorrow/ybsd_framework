apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'maven'

group = 'com.ybsd.framework'
version = '1.0-SNAPSHOT'
description = 'web_base'
sourceCompatibility = 1.8

repositories {
     maven {
        url 'http://nexus.nxin.com/nexus/content/groups/public'
    }
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/java' //可以将java目录下的所有非.java资源打包到classes下
        }
    }
}

dependencies {
    compile group: 'org.testng', name: 'testng', version:'6.8.8'
    compile group: 'javax.servlet.jsp', name: 'jsp-api', version:'2.1'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.1.0'
    compile group: 'org.apache.tomcat', name: 'tomcat-jdbc', version:'8.0.22'
    compile group: 'mysql', name: 'mysql-connector-java', version:'5.1.35'
    compile group: 'org.mybatis', name: 'mybatis', version:'3.2.8'
    compile group: 'org.mybatis', name: 'mybatis-spring', version:'1.1.1'
    compile group: 'com.github.pagehelper', name: 'pagehelper', version:'5.0.0'
    compile group: 'com.github.jsqlparser', name: 'jsqlparser', version:'0.9.5'
    compile group: 'com.alibaba', name: 'druid', version:'0.2.23'
    compile group: 'org.springframework', name: 'spring-core', version:'4.1.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-beans', version:'4.1.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version:'4.1.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-tx', version:'4.1.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-web', version:'4.1.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version:'4.1.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-jdbc', version:'4.1.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-context-support', version:'4.1.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-test', version:'4.1.4.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-web', version:'3.2.6.RELEASE'
    compile group: 'org.springframework.security', name: 'spring-security-config', version:'3.2.6.RELEASE'
    compile group: 'org.hibernate', name: 'hibernate-validator', version:'5.1.3.Final'
    compile group: 'net.spy', name: 'spymemcached', version:'2.11.6'
    compile group: 'com.alibaba', name: 'fastjson', version:'1.2.5'
    compile group: 'org.aspectj', name: 'aspectjweaver', version:'1.7.4'
    compile group: 'commons-httpclient', name: 'commons-httpclient', version:'3.1'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version:'4.5.2'
    compile(group: 'org.owasp.esapi', name: 'esapi', version:'2.1.0') {
exclude(module: 'log4j')
    }
    compile group: 'dom4j', name: 'dom4j', version:'1.6.1'
    compile group: 'commons-codec', name: 'commons-codec', version:'1.10'
    compile group: 'jaxen', name: 'jaxen', version:'1.1-beta-8'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version:'2.6.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version:'2.6.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version:'2.6.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-web', version:'2.6.1'
    compile group: 'org.slf4j', name: 'log4j-over-slf4j', version:'1.7.21'
    compile group: 'commons-io', name: 'commons-io', version:'1.4'
    compile group: 'jdom', name: 'jdom', version:'1.1'
    compile group: 'org.json', name: 'json', version:'20140107'
    compile group: 'xmlpull', name: 'xmlpull', version:'1.1.3.1'
    compile group: 'xpp3', name: 'xpp3', version:'1.1.4c'
    compile group: 'com.thoughtworks.xstream', name: 'xstream', version:'1.4.7'
    compile group: 'redis.clients', name: 'jedis', version:'2.7.0'
    compile group: 'org.apache.velocity', name: 'velocity', version:'1.7'
    compile group: 'org.apache.velocity', name: 'velocity-tools', version:'2.0'
    
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version:'2.5.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.5.3'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.5.3'
    compile group: 'com.fasterxml', name: 'classmate', version:'1.3.1'
    compile group: 'org.redisson', name: 'redisson', version:'2.2.26'
    compile group: 'junit', name: 'junit', version:'4.11'
    compile group: 'net.sf.json-lib', name: 'json-lib', version:'2.3', classifier:'jdk15'
    compile 'com.qiniu:qiniu-java-sdk:7.0.+'
    compile group: 'aweb-com', name: 'aweb-com', version:'1.4'
    compile group: 'com.nxin', name: 'nxin_common_remote', version:'0.0.3'
    compile group: 'junit', name: 'junit', version:'4.11'
    compile group: 'org.springframework.amqp', name: 'spring-rabbit', version:'1.6.6.RELEASE'
}

tasks.withType(AbstractCompile){
        options.encoding='UTF-8'
}

task pre <<{
    changeConfig('develop')
    vmFilesReplace.execute();
}

task dev <<{
    changeConfig('test')
    vmFilesReplace.execute();
}

task prod <<{
    def configFile = file('src/main/resources/config.properties')
    if(configFile.exists()) {
        println('删除config文件')
        configFile.delete()
    }
    "/data0/script/render.sh -i deploy/config_product.properties -o src/main/resources/config.properties".execute()
}

task vmFilesReplace <<
        {
            def now= new Date()
            def longTime= now.time
            description 'replace vno'
            def count = 0
            FileTree tree = fileTree(dir: 'src/main/webapp/WEB-INF/view').include('**/*.vm')
            tree.each
                    {
                        File file -> replaceVno(file,longTime)
                            count++
                    }
            println "counts of edited files:" + count
        }

def replaceVno(file,longTime)
{
    def content = file.getText("UTF-8")
    content = content.replaceAll('(?<=\\.)js(?!o).*(?=\\">)', "js?v="+longTime);
    content = content.replace('.css', '.css?v='+longTime);
    file.write(content, "UTF-8")
}


def replace(fileName,map){
	    def fl=file(fileName)
	    def content=fl.getText('UTF-8')
	    map.each{k,v -> content = content.replace(k,v)}
	    fl.write(content,'UTF-8')
}

def changeConfig(name){
	def configFile = file('src/main/resources/config.properties')
    if(configFile.exists()) {
        println('删除config文件')
        configFile.delete()
    }
	copy{
	  		from 'deploy'
			into 'src/main/resources'
			include '**_'+name+'.**'
			rename '(.+)_'+name+'\\.(.+)', '$1.$2'
	 }
    println('配置用'+name+'替换完成')
}

//依赖编译，然后打包JAR
task taskJar(type:Jar, dependsOn: compileJava) {
    from 'build/classes/main'
    include 'com/nxmall/nxds/*/*.class'
    destinationDir = file('build/libs')
}
//清除上次的编译过的文件
task clearPj(type:Delete){
    delete 'build','target'
}
//把JAR复制到目标目录
task release(type: Copy,dependsOn: [clearPj,taskJar]) {
    from('build/libs') {
        include '*.jar'
    }
    into ('target')
}
